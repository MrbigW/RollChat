package com.wrk.rollchat.greenDAO;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.wrk.rollchat.model.bean.UserInfo;
import com.wrk.rollchat.model.bean.InvitationInfo;
import com.wrk.rollchat.model.bean.GroupInfo;
import com.wrk.rollchat.model.bean.ContactInfo;

import com.wrk.rollchat.greenDAO.UserInfoDao;
import com.wrk.rollchat.greenDAO.InvitationInfoDao;
import com.wrk.rollchat.greenDAO.GroupInfoDao;
import com.wrk.rollchat.greenDAO.ContactInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig invitationInfoDaoConfig;
    private final DaoConfig groupInfoDaoConfig;
    private final DaoConfig contactInfoDaoConfig;

    private final UserInfoDao userInfoDao;
    private final InvitationInfoDao invitationInfoDao;
    private final GroupInfoDao groupInfoDao;
    private final ContactInfoDao contactInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        invitationInfoDaoConfig = daoConfigMap.get(InvitationInfoDao.class).clone();
        invitationInfoDaoConfig.initIdentityScope(type);

        groupInfoDaoConfig = daoConfigMap.get(GroupInfoDao.class).clone();
        groupInfoDaoConfig.initIdentityScope(type);

        contactInfoDaoConfig = daoConfigMap.get(ContactInfoDao.class).clone();
        contactInfoDaoConfig.initIdentityScope(type);

        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        invitationInfoDao = new InvitationInfoDao(invitationInfoDaoConfig, this);
        groupInfoDao = new GroupInfoDao(groupInfoDaoConfig, this);
        contactInfoDao = new ContactInfoDao(contactInfoDaoConfig, this);

        registerDao(UserInfo.class, userInfoDao);
        registerDao(InvitationInfo.class, invitationInfoDao);
        registerDao(GroupInfo.class, groupInfoDao);
        registerDao(ContactInfo.class, contactInfoDao);
    }
    
    public void clear() {
        userInfoDaoConfig.clearIdentityScope();
        invitationInfoDaoConfig.clearIdentityScope();
        groupInfoDaoConfig.clearIdentityScope();
        contactInfoDaoConfig.clearIdentityScope();
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public InvitationInfoDao getInvitationInfoDao() {
        return invitationInfoDao;
    }

    public GroupInfoDao getGroupInfoDao() {
        return groupInfoDao;
    }

    public ContactInfoDao getContactInfoDao() {
        return contactInfoDao;
    }

}
